# -*- coding: utf-8 -*-
# generated by wxGlade HG on Wed Jan  5 12:38:43 2011

import wx
import os
import transformador_linea_completa
from Acercade import Acercade
#import xrlc

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

class Principal(wx.Frame):
    def __init__(self, *args, **kwds):
        self.lista = []
        self.nombre_archivo = 'salida.xls'
        configuracion = open('img/configuracion.dat', 'r')
        self.directorio = configuracion.readline()
        configuracion.close()
        # begin wxGlade: Principal.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.Convertidor_statusbar = self.CreateStatusBar(1, 0)
        
        # Tool Bar
        self.Convertidor_toolbar = wx.ToolBar(self, -1, style=wx.TB_HORIZONTAL|wx.TB_FLAT|wx.TB_3DBUTTONS|wx.TB_TEXT|wx.TB_HORZ_LAYOUT|wx.TB_HORZ_TEXT)
        self.SetToolBar(self.Convertidor_toolbar)
        self.Convertidor_toolbar.AddLabelTool(1, "Nombre", wx.Bitmap("img/guardar.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Cambiar el nombre de salida", "Cambia el nombre por defecto.")
        self.Convertidor_toolbar.AddLabelTool(4, "Directorio", wx.Bitmap("img/carpeta.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Seleccionar directorio donde se guardara la salida", "Directorio donde se guarda la salida.")
        self.Convertidor_toolbar.AddLabelTool(3, "Acerca de", wx.Bitmap("img/Burn.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Acerca de la aplicacion", "Creditos.")
        self.Convertidor_toolbar.AddSeparator()
        self.Convertidor_toolbar.AddLabelTool(2, "Salir", wx.Bitmap("/home/cleve/Dropbox/extra/keso/PyConvertidor/img/exit.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Salir de la aplicacion", "Salir de la aplicacion.")
        # Tool Bar end
        self.panel_1 = wx.Panel(self, -1)
        self.label_1 = wx.StaticText(self.panel_1, -1, "Ingrese numero de archivos de entrada.")
        self.text_numero_de_archivos = wx.SpinCtrl(self.panel_1, -1, "0", min=1, max=100, style=wx.TE_READONLY)
        self.button_1 = wx.Button(self.panel_1, -1, "Cargar archivos")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TOOL, self.cambia_nombre, id=1)
        self.Bind(wx.EVT_TOOL, self.cambia_directorio, id=4)
        self.Bind(wx.EVT_TOOL, self.AcercaDe, id=3)
        self.Bind(wx.EVT_TOOL, self.salir, id=2)
        self.Bind(wx.EVT_BUTTON, self.cargar_archivos, self.button_1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: Principal.__set_properties
        self.SetTitle("PyMatConverter")
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("img/pulsar.ico", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((430, 204))
        self.Convertidor_statusbar.SetStatusWidths([-1])
        # statusbar fields
        Convertidor_statusbar_fields = ["PyMatConverter 1.0"]
        for i in range(len(Convertidor_statusbar_fields)):
            self.Convertidor_statusbar.SetStatusText(Convertidor_statusbar_fields[i], i)
        self.Convertidor_toolbar.SetToolSeparation(5)
        self.Convertidor_toolbar.Realize()
        # end wxGlade
        self.SetMinSize((430,204))

    def __do_layout(self):
        # begin wxGlade: Principal.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(self.label_1, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ADJUST_MINSIZE, 10)
        sizer_2.Add(self.text_numero_de_archivos, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 10)
        sizer_2.Add(self.button_1, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 10)
        self.panel_1.SetSizer(sizer_2)
        sizer_1.Add(self.panel_1, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        self.Centre()
        # end wxGlade

    def cargar_archivos(self, event): # wxGlade: Principal.<event_handler>
        
        numero_de_archivos = int(self.text_numero_de_archivos.GetValue())
        
        self.lista = [] #Elimino rutas de archivos anteriores
        
        for i in xrange(numero_de_archivos):
          dlg = wx.FileDialog(self, "Seleccione los archivos", os.getcwd(), "", "*.*", wx.OPEN)
          if dlg.ShowModal() == wx.ID_OK:
             path = dlg.GetPath()
             mypath = os.path.abspath(path)
             self.lista.append(mypath)
             
          dlg.Destroy()
          
        if self.directorio == '':
          ruta = self.nombre_archivo
          
        else:
          ruta = os.path.normcase(self.directorio+'/'+self.nombre_archivo)
          
        if transformador_linea_completa.transformar(self.lista, ruta)=='ok':
          dlg = wx.MessageDialog(self, u'Operacion realizada exitosamente.\n\n El archivo de salida se gener√≥ con el nombre: '+ self.nombre_archivo,'Mensaje',wx.OK | wx.ICON_INFORMATION)
          dlg.ShowModal()
          dlg.Destroy()

        else:
          dlg = wx.MessageDialog(self, u'Error, contactese con el rey del mambo.','Mensaje',wx.OK | wx.ICON_INFORMATION)
          dlg.ShowModal()
          dlg.Destroy()


    def cambia_nombre(self, event): # wxGlade: Principal.<event_handler>
        dlg = wx.TextEntryDialog(self, 'Ingrese nombre con el que desea guardar la planilla excel','Guardar')
        dlg.SetValue("salida")
        if dlg.ShowModal() == wx.ID_OK:
            self.nombre_archivo = dlg.GetValue()+'.xls'
            self.SetStatusText('Nombre cambiado.')
        dlg.Destroy()


    def salir(self, event): # wxGlade: Principal.<event_handler>
        self.Destroy()

    def AcercaDe(self, event): # wxGlade: Principal.<event_handler>
        frame_1 = Acercade(None, -1, "")
        
        frame_1.Show()

    def cambia_directorio(self, event): # wxGlade: Principal.<event_handler>
        dlg = wx.DirDialog(self, "Seleccione directorio: ", style=wx.DD_DEFAULT_STYLE | wx.DD_NEW_DIR_BUTTON)
        if dlg.ShowModal() == wx.ID_OK:
          self.directorio = dlg.GetPath()
          configuracion = open('img/configuracion.dat', 'w')
          configuracion.write(self.directorio)
          configuracion.close()
          self.SetStatusText('Directorio cambiado.')
        
        
        else:
          self.SetStatusText('Sin cambios.')
          
        dlg.Destroy()

# end of class Principal


